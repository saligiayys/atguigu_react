{"version":3,"sources":["components/8_ErrorBoundary/Child.jsx","components/8_ErrorBoundary/Parent.jsx","App.js","index.js"],"names":["Child","state","users","this","map","userObj","name","age","id","Component","Parent","hasError","console","log","error","App","ReactDOM","render","document","getElementById"],"mappings":"yLAEqBA,E,4MACpBC,MAAQ,CASPC,MAAM,O,4CAGP,WACC,OACC,gCACC,+DAECC,KAAKF,MAAMC,MAAME,KAAI,SAACC,GACrB,OAAO,+BAAsBA,EAAQC,KAA9B,OAAwCD,EAAQE,MAAvCF,EAAQG,c,GAnBKC,aCCdC,E,4MASpBT,MAAQ,CACPU,SAAS,I,uDAUV,WACCC,QAAQC,IAAI,2K,oBAGb,WACC,OACC,gCACC,gEAECV,KAAKF,MAAMU,SAAW,0GAAwB,cAAC,EAAD,U,uCAflD,SAAgCG,GAE/B,OADAF,QAAQC,IAAI,MAAMC,GACX,CAACH,SAASG,O,GAhBiBL,aCAfM,E,4JAEpB,WACC,OACC,cAAC,WAAD,UACC,cAAC,EAAD,U,GAL6BN,a,QCEjCO,IAASC,OACR,cAAC,IAAD,UACC,cAAC,EAAD,MAEDC,SAASC,eAAe,W","file":"static/js/main.4c8a52c9.chunk.js","sourcesContent":["import React, { Component } from 'react'\r\n\r\nexport default class Child extends Component {\r\n\tstate = {\r\n\t\t// users:[\r\n\t\t// \t{id:'001',name:'tom',age:18},\r\n\t\t// \t{id:'002',name:'jack',age:19},\r\n\t\t// \t{id:'003',name:'peiqi',age:20},\r\n\t\t// ]\r\n\r\n\t\t//模拟出错。正常的users应该是个数组，下面才可以调用map。\r\n\t\t//出错的原因可能是由于后端人员没有做好数据的对接。（比如应该传来一个数组，但却传来了一个字符串。）\r\n\t\tusers:'abc'\r\n\t}\r\n\r\n\trender() {\r\n\t\treturn (\r\n\t\t\t<div>\r\n\t\t\t\t<h2>我是Child组件</h2>\r\n\t\t\t\t{\r\n\t\t\t\t\tthis.state.users.map((userObj)=>{\r\n\t\t\t\t\t\treturn <h4 key={userObj.id}>{userObj.name}----{userObj.age}</h4>\r\n\t\t\t\t\t})\r\n\t\t\t\t}\r\n\t\t\t</div>\r\n\t\t)\r\n\t}\r\n}","import React, { Component } from 'react'\r\nimport Child from './Child'\r\n\r\nexport default class Parent extends Component {\r\n\r\n\t//错误边界。不要让一个子组件的错误导致整个应用都无法正常运行。使错误被控制在一定范围之内。\r\n\t//注意：使用错误边界，需要在父组件里进行配置，而不是子组件里。或者说，应该在容易发生错误的那个组件的父组件上做手脚。\r\n\r\n\t//但是错误边界只适用于生产环境，不能用于开发环境。\r\n\t//所以在这里你通过WebStorm或VsCode开启后会发现，它会先提示错误，然后马上整个应用又报错了，因为我们是开发人员，不是用户\r\n\t//只有经过build打包，真正上线后，才会正常执行我们想要的效果。\r\n\r\n\tstate = {\r\n\t\thasError:'' //提前定义好这个状态，用于标识子组件是否产生错误\r\n\t}\r\n\r\n\t//当Parent的子组件出现任何报错时候，就会触发getDerivedStateFromError调用，并携带错误信息error\r\n\tstatic getDerivedStateFromError(error){//名称直译：从错误获取一个衍生的状态\r\n\t\tconsole.log('@@@',error);\r\n\t\treturn {hasError:error}//返回一个状态对象，更新状态。\r\n\t\t//因此需要在下面先判断是否有错误，有错误提示用户，没错误正常渲染Child。\r\n\t}\r\n\r\n\tcomponentDidCatch(){\r\n\t\tconsole.log('此处统计错误，反馈给服务器，用于通知编码人员进行bug的解决');\r\n\t}\r\n\r\n\trender() {\r\n\t\treturn (\r\n\t\t\t<div>\r\n\t\t\t\t<h2>我是Parent组件</h2>\r\n\t\t\t\t{/*先判断是否有错误，有错误提示用户，没错误正常渲染Child。*/}\r\n\t\t\t\t{this.state.hasError ? <h2>当前网络不稳定，稍后再试</h2> : <Child/>}\r\n\t\t\t</div>\r\n\t\t)\r\n\t}\r\n}\r\n","import React, { Component,Fragment } from 'react'\r\nimport Demo from './components/8_ErrorBoundary/Parent'\r\n\r\nexport default class App extends Component {\r\n\t//通过修改上面Demo的引用路径，来使用不同的组件。注意8_ErrorBoundary需要再往下写一层目录，因为里面不叫index.jsx\r\n\trender() {\r\n\t\treturn (\r\n\t\t\t<Fragment>\r\n\t\t\t\t<Demo/>\r\n\t\t\t</Fragment>\r\n\t\t)\r\n\t}\r\n}\r\n","import React from 'react'\r\nimport ReactDOM from 'react-dom'\r\nimport App from './App'\r\nimport {BrowserRouter} from 'react-router-dom'\r\n\r\nReactDOM.render(\r\n\t<BrowserRouter>\r\n\t\t<App/>\r\n\t</BrowserRouter>,\r\n\tdocument.getElementById('root'))"],"sourceRoot":""}